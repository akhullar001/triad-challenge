source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
99/sqrt(100)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
max(ts1)
(max(ts1)-mean(ts1))/sd(ts1)
sd(ts1)
mean(ts1)
1/100
sd(c(rep(99,0), 1))
sd(c(rep(99,0), 1))
sd(c(rep(99,0.00001), 1))
sd(rnorm(100))
ts = c(rep(99,0))
sd(c(rep(0,90), 1))
mean(c(rep(0,90), 1))
data(ausbeer)
source('~/.active-rstudio-document', echo=TRUE)
library(forecast)
??ausbeer
install.packages('fpp')
library(fpp)
data(ausbeer)
source('~/.active-rstudio-document', echo=TRUE)
data("ausbeer")
plot(ausbeer)
?lag
install.packages('stats')
source('~/.active-rstudio-document', echo=TRUE)
names(ausbeer)
plot(lag(ausbeer))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?line
plot(ausbeer)
with(ausbeer, plot())
plot(ausbeer)
plot(lag(ausbeer, k=5))
?digg
?diff
plot(diff(ausbeer))
plot(ausbeer - lag(ausbeer, 1))
plot(ausbeer - lag(ausbeer, 2))
diff_calculated = ausbeer - lag(ausbeer)
diff_auto = diff(ausbeer)
head(diff_auto)
head(diff_calculated)
diff_calculated = lag(ausbeer) - ausbeer
diff_auto = diff(ausbeer)
diff_calculated
diff_auto
plot(ausbeer)
plot(lag(ausbeer))
lines(lag(ausbeer))
lag_beer = lag(ausbeer)
source('~/.active-rstudio-document', echo=TRUE)
ausbeer
head(ausbeer)
lag_beer
?lag
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ac[[1]]
ac[[2]]
ac[[3]]
ac[1]
ac[2]
source('~/.active-rstudio-document', echo=TRUE)
plot(ac)
plot(unlist(ac))
source('~/.active-rstudio-document', echo=TRUE)
ac[[1]]
ac[[2]]
cor(ausbeer)
cor(ausbeer, ausbeer)
cor(ausbeer, lag(ausbeer))
cor(ausbeer, lag(ausbeer, k = 10))
as.numeric(ausbeer)
as.numeric(lag(ausbeer))
as.numeric(ausbeer[:-1]
as.numeric(ausbeer[1:100)
as.numeric(ausbeer[1:100])
as.numeric(ausbeer[:-1])
as.numeric(ausbeer[-1:])
head(ausbeer)
head(ausbeer, -1)
ts = ausbeer
ts = as.numeric(ausbeer)[1:length(ausbeer)-1]
ts_lag1 = as.numeric(ausbeer)[2:length(ausbeer)]
cor(ts, ts_lag1)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(unlist(ac))
source('~/.active-rstudio-document', echo=TRUE)
acf(ausbeer)
ausbeer_diff = diff(ausbeer)
plot(ausbeer_diff)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
acf(ausbeer_diff)
plot(unlist(ac), type = 'h')
acf(ausbeer_diff)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot.ts(ausbeer)
seasonplot(ausbeer)
?seasonplot
seasonplot(ausbeer, col=1:10)
seasonplot(ausbeer, col=1:40)
plot.ts(ausbeer)
line(ma(ausbeer,4))
lines(ma(ausbeer,4))
lines(ma(ausbeer,4))
source('~/.active-rstudio-document', echo=TRUE)
plot.ts(log(ausbeer))
plot.ts(log(diff(ausbeer)))
plot.ts(diff(log(ausbeer)))
library(tseries)
adf.test(ausbeer)
adf.test(diff(ausbeer))
adf.test(log(ausbeer))
adf.test(diff(log(ausbeer)))
plot.ts(ausbeer)
plot.ts(log(ausbeer))
plot.ts(diff(log(ausbeer)))
plot.ts(diff(ausbeer))
plot.ts(ausbeer)
plot.ts(log(ausbeer))
plot.ts(diff(log(ausbeer)))
plot.ts(diff(ausbeer))
auto.arima(diff(log(ausbeer)))
source('~/.active-rstudio-document', echo=TRUE)
fit %>% forecast(h=10) %>% autoplot()
fit %>% forecast(h=10) %>% autoplot(include=95
fit %>% forecast(h=10) %>% autoplot(include=95)
fit %>% forecast(h=10) %>% autoplot(include=95)
?autoplot
fit <- auto.arima(ausbeer)
summary(fit)
acf(ausbeer)
acf(diff(ausbeer))
pacf(diff(ausbeer))
fit <- auto.arima(ausbeer, stepwise = F, approximation = F)
summary(fit)
fit <- auto.arima(ausbeer, stepwise = F, approximation = F, seasonal = F)
summary(fit)
fit <- auto.arima(ausbeer, stepwise = F, approximation = F, seasonal = T)
summary(fit)
fit %>% forecast(h=10) %>% autoplot(include=95)
acf(diff(ausbeer))
pacf(diff(ausbeer))
data(elacequip)
install.packages('fpp2')
library(fpp2)
data(elacequip)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?stl
?seasadj
autplot(elecequip)
autplot(elecequip)
library(forecast)
autplot(elecequip)
autoplot(elecequip)
?stl
loess <- stl(elecequip, s.window = 'periodic')
autplot(loess)
autoplot(loess)
autoplot(elecequip)
loess <- stl(elecequip, s.window = 'periodic')
autoplot(loess)
?seasadj
seasonally_adjusted <- elecequip %>%
stl(s.window = 'periodic') %>%
seasadj()
autoplot(seasonally_adjusted)
lines(elecequip)
autoplot(seasonally_adjusted)
plot(elecequip)
lines(elecequip)
?lines
plot(lowess(elecequip))
source('~/.active-rstudio-document', echo=TRUE)
autoplot(elecequip)
autoplot(seasonally_adjusted)
hist(seasonally_adjusted)
autoplot(seasonally_adjusted)
seasonally_adjusted %>% diff() %>% autplot()
seasonally_adjusted %>% diff() %>% autoplot()
seasonally_adjusted %>% diff() %>% ggtsdisplay()
(fit <- Arima(seasonally_adjusted, order=c(3,1,1)))
fit <- Arima(seasonally_adjusted, order=c(3,1,1))
(fit <- Arima(seasonally_adjusted, order=c(3,1,1)))
auto.arima(seasonally_adjusted)
auto.arima(seasonally_adjusted, approximation = F, stepwise = F)
Box.test(elecequip)
residuals(fit)
Box.test(resid(fit))
checkresiduals(fit)
(fit <- Arima(seasonally_adjusted, order=c(1,1,1)))
checkresiduals(fit)
(fit <- Arima(seasonally_adjusted, order=c(2,1,1)))
checkresiduals(fit)
(fit <- Arima(seasonally_adjusted, order=c(3,1,1)))
checkresiduals(fit)
(fit <- Arima(seasonally_adjusted, order=c(4,1,1)))
checkresiduals(fit)
(fit <- Arima(seasonally_adjusted, order=c(3,1,0)))
checkresiduals(fit)
source('~/.active-rstudio-document', echo=TRUE)
fit <- auto.arima(elecequip)
(fit <- auto.arima(elecequip))
source('~/.active-rstudio-document', echo=TRUE)
length(elecequip)
195*.8
train <- elecequip[1:156]
train <- ts(elecequip[1:156])
test <- ts(elecequip[157:195])
(fit <- auto.arima(train))
train <- elecequip[1:156]
test <- elecequip[157:195]
(fit <- auto.arima(train))
195-157
predict <- fit %>% forecast(h=38)
predict$fitted
predict$x
source('~/.active-rstudio-document', echo=TRUE)
autplot(elecequip)
autoplot(elecequip)
autplot(log(elecequip))
autoplot(log(elecequip))
autoplot(diff(log(elecequi[])))
autoplot(diff(log(elecequip)))
adf.test(diff(log(elecequip)))
acf(diff(elecequip))
acf(elecequip)
pacf(elecequip)
acf(diff(elecequip))
pacf(diff(elecequip))
seasonally_adjusted <- elecequip %>%
stl() %>%
seasadj()
seasonally_adjusted <- elecequip %>%
stl(s.window='periodic') %>%
seasadj()
seasonally_adjusted <- elecequip %>%
stl(s.window='periodic') %>%
seasadj() %>%
diff
autplot(seasonally_adjusted)
autoplot(seasonally_adjusted)
acf(seasonally_adjusted)
pacf(seasonally_adjusted)
(fit <- auto.arima(seasonally_adjusted))
(fit <- auto.arima(seasonally_adjusted, approximation = F, stepwise = F))
source('~/.active-rstudio-document', echo=TRUE)
head(student_test_data)
head(student_data)
studnet_data['notes'] <- NULL
student_data['notes'] <- NULL
head(student_data)
str(student_data)
summary(student_data)
table(student_data$hours_studied, student_data$test_prep)
View(
student_data %>%
filter(dojo_class == F & test_prep == F)
)
names(student_data)
ggplot(data = student_data, aes(x = sex, y = pass)) +
geom_boxplot()
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data = student_data, aes(x = sex, y = pass)) +
geom_bar()
table(student_data$sex, student_data$pass)
table(student_data$sex, student_data$pass)/nrow(student_data)
dojo_class_scores <- sutdent_data %>%
filter(dojo_class == T) %>%
select(pass)
dojo_class_scores <- student %>%
filter(dojo_class == T) %>%
select(pass)
dojo_class_scores <- student_data %>%
filter(dojo_class == T) %>%
select(pass)
no_dojo_class_scores <- student_data %>%
filter(dojo_class == F) %>%
select(pass)
t.test(dojo_class_scores, no_dojo_class_scores)
?t.test
names(student_data)
t.test(
student_data$pass[student_data$dojo_class == T],
student_data$pass[student_data$dojo_class == F]
)
t.test(
student_data$pass[student_data$test_prep == T],
student_data$pass[student_data$test_prep == F]
)
hist(student_data$hours_studied)
t.test(
student_data$pass[student_data$hours_studied]
)
cor(student_data$pass, student_data$hours_studied)
student_data %>%
replace_na(0)
student_data <- replace_na(student_data, 0)
?replace_na
student_data %>%
mutate(hours_studied = replace_na(hours_studied, 0))
student_data$hours_studied <- replace_na(0)
summary(student_data)
View(student_data)
source('~/.active-rstudio-document', echo=TRUE)
student_data[is.na(student_data$hours_studied)] <- 0
student_data$hours_studied[is.na(student_data$hours_studied)] <- 0
with(student_data, cor(hours_studied, pass))
plot(student_data$hours_studied, student_data$pass)
ggplot(data = student_data, aes(y = hours_studied, color = pass)) +
geom_density()
ggplot(data = student_data, aes(x = hours_studied, color = pass)) +
geom_density()
ggplot(data = student_data, aes(x = log(hours_studied), color = pass)) +
geom_density()
hist(log(student_data$hours_studied))
hist(student_data$hours_studied)
hist(log(student_data$hours_studied)
hist(log(student_data$hours_studied))
hist(log(student_data$hours_studied))
hist(sqrt(student_data$hours_studied))
hist(log(student_data$hours_studied))
with(student_data, cor(log(hours_studied), pass))
names(student_data)
(aov(country~pass), data = student_data)
(aov(country~pass), data = student_data))
(aov(country~pass, data = student_data))
sum(is.na(student_data$country))
aov(country~pass, data = student_data)
sum(is.na(student_data$pass))
sum(is.na(student_data$country))
summary(student_data$country)
table(student_data$country)
chisq.test(table(student_data$dojo_class, student_data$pass))
chisq.test(table(student_data$test_prep, student_data$pass))
dojo_class_ct <- with(student_data$dojo_class, student_data$pass)
dojo_class_ct <- table(student_data$dojo_class, student_data$pass)
dojo_class_ct <- table(student_data$dojo_class, student_data$pass)
dojo_class_ct <- dojo_class_ct / rowSums(dojo_class_ct)
(dojo_class_ct <- dojo_class_ct / rowSums(dojo_class_ct))
chisq.test(table(student_data$country, student_data$pass))
median_hours <- median(student_data$hours_studied, na.rm = T)
student_data$above_median_hours <- student_data$hours_studied > median_hours
View(student_data)
chisq.test(table(student_data$above_median_hours, student_data$pass))
ggplot(data = student_data, aes(x = pass, y = hours_studied)) +
geom_boxplot()
ggplot(data = student_data, aes(x = pass, y = hours_studied)) +
geom_boxplot(outlier.shape = NA)
chisq.test(table(student_data$sex, student_data$pass))
names(student_data)
chisq.test(table(student_data$language, student_data$pass))
chisq.test(table(student_data$lang, student_data$pass))
head(student_data)
summary(student_data)
source('~/.active-rstudio-document', echo=TRUE)
iqr(student_data$hours_studied)
IQR(student_data$hours_studied)
IQR(student_data$hours_studied, na.rm = )
IQR(student_data$hours_studied, na.rm = T)
quantile(student_data$hours_studied)
quantile(student_data$hours_studied, na.rm = T)
student_data$study_hour_quartiles <- cut(student_data$hours_studied,
breaks = quantile(student_data$hours_studied, na.rm = T),
labels = c(1, 2, 3, 4))
View(student_data)
chisq.test(table(student_data$study_hour_quartiles, student_data$pass))
ggplot(student_data, aes(x = study_hour_quartiles, y = pass)) +
geom_bar()
ggplot(student_data, aes(x = study_hour_quartiles, y = pass)) +
geom_boxplot()
pass_by_hour_quartiles <- student_data %>%
group_by(study_hour_quartiles) %>%
summarise(pass = sum(pass))
View(pass_by_hour_quartiles)
pass_by_hour_quartiles <- student_data %>%
group_by(study_hour_quartiles) %>%
summarise(pass = sum(pass),
count = n())
View(pass_by_hour_quartiles)
pass_by_hour_quartiles <- student_data %>%
group_by(study_hour_quartiles) %>%
summarise(pass = sum(pass),
count = n()) %>%
mutate(percent_pass = pass/count)
View(pass_by_hour_quartiles)
ggplot(data = pass_by_hour_quartiles, aes(x = study_hour_quartiles, y = percent_pass)) +
geom_bar()
?geom_bar
ggplot(data = pass_by_hour_quartiles, aes(x = study_hour_quartiles, y = percent_pass)) +
geom_bar(stat = 'identity')
install.packages('DMwR')
library(DMwR)
?knnImputation
knnImputation(data = student_data[, 'hours_studied'])
knnImputation(data = student_data)
knnImputation(data = student_data$hours_studied)
student_data <- read.csv("student_test_data.csv", stringsAsFactors = F)
View(student_data)
apply(student_data, 2, function(x) sum(is.na(x)))
clean <- knnImputation(sutdent_data)
clean <- knnImputation(student_data)
str(student_data)
student_data$notes <- NULL
clean <- knnImputation(student_data)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
setwd("/Users/ankushkhullar/Desktop/TRIAD")
student_data <- read.csv("student_test_data.csv", stringsAsFactors = F)
student_data['notes'] <- NULL
names(student_data)
head(student_data)
str(student_data)
summary(student_data)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
setwd("/Users/ankushkhullar/Desktop/TRIAD")
student_data <- read.csv("student_test_data.csv", stringsAsFactors = F)
student_data['notes'] <- NULL
names(student_data)
head(student_data)
str(student_data)
summary(student_data)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
setwd("/Users/ankushkhullar/Desktop/TRIAD")
student_data <- read.csv("student_test_data.csv", stringsAsFactors = F)
student_data <- read.csv("/input/student_test_data.csv", stringsAsFactors = F)
setwd("/Users/ankushkhullar/Desktop/TRIAD")
student_data <- read.csv("/input/student_test_data.csv", stringsAsFactors = F)
student_data <- read.csv("../input/student_test_data.csv", stringsAsFactors = F)
getwd()
student_data <- read.csv("./input/student_test_data.csv", stringsAsFactors = F)
student_data['notes'] <- NULL
names(student_data)
head(student_data)
str(student_data)
summary(student_data)
student_data <- read.csv("./input/student_test_data.csv")
student_data['notes'] <- NULL
names(student_data)
head(student_data)
str(student_data)
summary(student_data)
t.test(
student_data$pass[student_data$dojo_class == T],
student_data$pass[student_data$dojo_class == F]
)
chisq.test(table(student_data$dojo_class, student_data$pass))
chisq.test(table(student_data$country, student_data$pass))
chisq.test(table(student_data$sex, student_data$pass))
chisq.test(table(student_data$lang, student_data$pass))
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
setwd("/Users/ankushkhullar/Desktop/TRIAD")
student_data <- read.csv("./input/student_test_data.csv")
student_data['notes'] <- NULL
names(student_data)
head(student_data)
str(student_data)
summary(student_data)
chisq.test(table(student_data$sex, student_data$pass))
chisq.test(table(student_data$sex, student_data$pass))
?chisq.test
chisq.test(table(student_data$sex, student_data$pass), correct = F)
